import math
# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.

equation = 'y = -12x + 11111140.2121'
x = 2.5
# вычислите и выведите y
eq = equation[4:]
pos_x = eq.find("x")
k = float(eq[:pos_x])
b = eq[pos_x+2:]
if (eq[pos_x+2] == "+"):
    b = float(eq[pos_x+4:])
else:
    b = float(eq[pos_x + 4:])*(-1)

y = k*x + b

print("y={}".format(y))

# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
date = '01.11.1985'

def iscorrect(date):
    day = date[:2]
    # print(day)

    month = date[3:5]
    # print(month)

    year = date[-4:]
    # print(year)

    thirty_one = [1, 3, 5, 7, 8, 10, 12]
    max_day = 31

    if not ((str(day).isdigit()) & str(month).isdigit() & str(year).isdigit()):
        # print("Format is wrong!")
        return False

    if (thirty_one.count(month) == 0):
        max_day = 30

    if 1 < int(year) < 9999:
        if 1 <= int(month) <= 12:
            if 1 <= int(day) <= max_day:
                return True
            else:
                return False
        else:
            return False
    else:
        return False


# Примеры некорректных дат
print(iscorrect(date))
date = '01.22.1001'
print(iscorrect(date))
date = '1.12.1001'
print(iscorrect(date))
date = '-2.10.3001'
print(iscorrect(date))



# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты, 
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3
# max_room = 14
# rooms = [1]
# tower = []
# for i in range(1, max_room):
#     for room in rooms:
#         rooms.append(room * room)
